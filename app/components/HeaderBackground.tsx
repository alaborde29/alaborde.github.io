/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF } from "@react-three/drei";
import React, { useEffect, useRef } from "react";
import * as THREE from "three";
import { extend } from '@react-three/fiber'
import { shaderMaterial, GradientTexture } from "@react-three/drei";
import { Canvas } from "@react-three/fiber";

const StripesShaderMaterial = shaderMaterial(
  {},
  // vertex shader
  /*glsl*/`
  varying vec2 vUv;
  void main() {
    vUv = uv;
    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
  }
`,
// fragment shader
/*glsl*/`
  uniform float time;
  uniform vec3 color;
  varying vec2 vUv;
  void main() {
    gl_FragColor.rgba = vec4(vUv, 1.0, 1.0);
  }
`
)

extend({ StripesShaderMaterial });

export function HeaderBackground() {

  return (
    <Canvas style={{ position: "absolute", top: 0, left: 0, width: "100%", height: "100%" }}
      camera={{ position: [0, 0, 5], fov: 50 }}>
      <mesh scale={[0.1, 0.1, 1]}>
        <planeGeometry args={[window.innerWidth, window.innerHeight]} />
        <meshBasicMaterial>
          <GradientTexture
            stops={[0, 1]} // As many stops as you want
            colors={['aquamarine', 'hotpink']} // Colors need to match the number of stops
            size={1024} // Size is optional, default = 1024
          />
        </meshBasicMaterial>
      </mesh>
    </Canvas>
  );
}
export default HeaderBackground